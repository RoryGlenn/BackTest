period 1: 4/14/2021 - 7/21/21
period 2: 1/7/2018  - 4/1/2018
period 3: 7/1/2019  - 11/19/2019
period 4: 7/1/2017  - 11/19/2017
period 5: 1/28/21   - 4/15/21
period 6: 7/20/2021 - 9/5/2021
period 7: 5/9/21    - 9/9/21
period 8: 5/9/21    - 9/9/21
period 9: 1/1/2019  - 4/1/19



period 10: 1/1/2016 - 1/26/2022



# period 1: (4/14/2021 - 7/21/21)
FILE       = BTC_USD_2021
start_date = datetime.datetime(year=2021, month=4, day=14, hour=0, minute=1)
end_date   = datetime.datetime(year=2021, month=7, day=21, hour=0, minute=1)

# period 2: (1/7/2018 - 4/1/2018)
FILE       = BTC_USD_2018
start_date = datetime.datetime(year=2018, month=1, day=7, hour=0, minute=1)
end_date   = datetime.datetime(year=2018, month=4, day=1, hour=0, minute=1)

# period 3: (7/1/2019 - 11/19/2019)
FILE       = BTC_USD_2019
start_date = datetime.datetime(year=2019, month=7, day=1, hour=0, minute=1)
end_date   = datetime.datetime(year=2019, month=11, day=19, hour=0, minute=1)

# period 4: (7/1/2017 - 11/19/2017)
FILE       = BTC_USD_2017
start_date = datetime.datetime(year=2017, month=9, day=20, hour=0, minute=1)
end_date   = datetime.datetime(year=2017, month=12, day=17, hour=0, minute=1)

# period 5: (1/28/21 - 4/15/21)
FILE       = BTC_USD_2021
start_date = datetime.datetime(year=2021, month=1, day=28, hour=0, minute=1)
end_date   = datetime.datetime(year=2021, month=4, day=15, hour=0, minute=1)

# period 6: (7/20/2021 -> 9/5/2021)
FILE       = BTC_USD_2021
start_date = datetime.datetime(year=2021, month=7, day=20, hour=0, minute=1)
end_date   = datetime.datetime(year=2021, month=9, day=5, hour=0, minute=1)

# period 7: 5/9/21 -> 9/9/21
FILE       = BTC_USD_2020
start_date = datetime.datetime(year=2020, month=5, day=9, hour=0, minute=1)
end_date   = datetime.datetime(year=2020, month=9, day=9, hour=0, minute=1)

# period 8: 5/9/21 -> 9/9/21
FILE       = BTC_USD_2019
start_date = datetime.datetime(year=2019, month=1, day=1, hour=0, minute=1)
end_date   = datetime.datetime(year=2019, month=5, day=1, hour=0, minute=1)

# period 9: 1/1/2019 -> 4/1/19
FILE       = BTC_USD_2019
start_date = datetime.datetime(year=2019, month=1, day=1, hour=0, minute=1)
end_date   = datetime.datetime(year=2019, month=4, day=1, hour=0, minute=1)

# period 10: 1/1/2016 -> 1/26/2022
FILE       = BTC_USD_ALL
start_date = datetime.datetime(year=2016, month=1, day=1, hour=0, minute=1)
end_date   = datetime.datetime(year=2022, month=1, day=1, hour=0, minute=1)




Hey Folks, I'm happy to announce that the results of my first batch of backtesting are in!
In this batch I tested 4 different DCA bots on 9 different time periods.
I compared the results against each other along with a typical Buy & Hold strategy.
All bots started with the same amount of cash ($10,000) and always tried to use it all on every trade they made in order to maximize profit.
Here are the time periods, settings/parameters for each bot along with the profit in terms of ROI %

period 1: 4/14/2021 - 7/21/21
period 2: 1/7/2018  - 4/1/2018
period 3: 7/1/2019  - 11/19/2019
period 4: 7/1/2017  - 11/19/2017
period 5: 1/28/21   - 4/15/21
period 6: 7/20/2021 - 9/5/2021
period 7: 5/9/21    - 9/9/21
period 8: 5/9/21    - 9/9/21
period 9: 1/1/2019  - 4/1/19


SCALP7 
    target_profit_percent        1.0%
    trail_percent                0.2%
    safety_orders_max            7
    safety_orders_active_max     7
    safety_order_volume_scale    2.5x
    safety_order_step_scale      1.56x
    safety_order_price_deviation 1.3%
    base_order_size_usd          20
    safety_order_size_usd        10

    ROI
        period 1: 2.03%
        period 2: 2.49%
        period 3: 1.10%

        period 4: 2.03%
        period 5: 1.42%
        period 6: 0.43%

        period 7: 0.06%
        period 8: 0.49%
        period 9: 0.24%


########################################################
SCALP 15
    target_profit_percent        1.0%
    trail_percent                0.2%
    safety_orders_max            15
    safety_orders_active_max     15
    safety_order_volume_scale    1.2x
    safety_order_step_scale      1.16x
    safety_order_price_deviation 1.0%
    base_order_size_usd          20
    safety_order_size_usd        10

    ROI
        period 1: 6.97%
        period 2: 2.64%
        period 3: 3.23% 

        period 4: 8.59%
        period 5: 5.94%
        period 6: 1.89% 
        
        period 7: 0.95%
        period 8: 1.72%
        period 9: 0.88%

########################################################


SCALP20 
    target_profit_percent        1.0%
    trail_percent                0.2%
    safety_orders_max            20
    safety_orders_active_max     20
    safety_order_volume_scale    1.2x
    safety_order_step_scale      1.05x
    safety_order_price_deviation 1.0%
    base_order_size_usd          20
    safety_order_size_usd        10

    ROI
        period 1: 5.58%
        period 2: 4.20%
        period 3: 2.75%

        period 4: 2.75%
        period 5: 3.37%
        period 6: 0.99%

        period 7: 0.76%
        period 8: 1.14%
        period 9: 0.59%

########################################################        